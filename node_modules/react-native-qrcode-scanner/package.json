{
  "_args": [
    [
      {
        "raw": "react-native-qrcode-scanner",
        "scope": null,
        "escapedName": "react-native-qrcode-scanner",
        "name": "react-native-qrcode-scanner",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/home/pressemendoza/Bureau/doudousV0.1"
    ]
  ],
  "_from": "react-native-qrcode-scanner@latest",
  "_id": "react-native-qrcode-scanner@0.0.23",
  "_inCache": true,
  "_location": "/react-native-qrcode-scanner",
  "_nodeVersion": "6.10.1",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/react-native-qrcode-scanner-0.0.23.tgz_1509940902168_0.28046742593869567"
  },
  "_npmUser": {
    "name": "moaazsidat",
    "email": "moaazsidat@gmail.com"
  },
  "_npmVersion": "3.10.10",
  "_phantomChildren": {},
  "_requested": {
    "raw": "react-native-qrcode-scanner",
    "scope": null,
    "escapedName": "react-native-qrcode-scanner",
    "name": "react-native-qrcode-scanner",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/react-native-qrcode-scanner/-/react-native-qrcode-scanner-0.0.23.tgz",
  "_shasum": "7d267c4049d89a35dc7914f46f79f8eba393cdb7",
  "_shrinkwrap": null,
  "_spec": "react-native-qrcode-scanner",
  "_where": "/home/pressemendoza/Bureau/doudousV0.1",
  "author": {
    "name": "Moaaz Sidat"
  },
  "bugs": {
    "url": "https://github.com/moaazsidat/react-native-qrcode-scanner/issues"
  },
  "dependencies": {
    "prop-types": "^15.5.10"
  },
  "description": "A QR code scanner for React Native.",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "7d267c4049d89a35dc7914f46f79f8eba393cdb7",
    "tarball": "https://registry.npmjs.org/react-native-qrcode-scanner/-/react-native-qrcode-scanner-0.0.23.tgz"
  },
  "gitHead": "8d64a7b7f8080717a198350f934684e80e8d4f3e",
  "homepage": "https://github.com/moaazsidat/react-native-qrcode-scanner#readme",
  "keywords": [
    "react-native",
    "react",
    "ios",
    "qrcode",
    "qr",
    "scanner",
    "barcode"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "moaazsidat",
      "email": "moaazsidat@gmail.com"
    }
  ],
  "name": "react-native-qrcode-scanner",
  "optionalDependencies": {},
  "peerDependencies": {
    "react-native-camera": "^0.10.0"
  },
  "readme": "# react-native-qrcode-scanner\n[![npm version](https://badge.fury.io/js/react-native-qrcode-scanner.svg)](https://badge.fury.io/js/react-native-qrcode-scanner)\n\nA QR code scanner component for React Native built on top of [react-native-camera by Lochlan Wansbrough](https://github.com/lwansbrough/react-native-camera)\n\n\nPlease note, this will also function as a generic barcode scanner by the virtue of the above module supporting barcode scanning, however, this module was initially built as a QR code scanner.\n\nI wrote this module because I couldn't find one that could be simply plugged into a project without requiring too much setup. \n\n## Getting started\n\n### Requirements\n\n#### iOS 10\nWith iOS 10 and higher you need to add the \"Privacy - Camera Usage Description\" key to the info.plist of your project. This should be found in 'your_project/ios/your_project/Info.plist'.  Add the following code:\n  ```\n  <key>NSCameraUsageDescription</key>\n  <string>Your message to user when the camera is accessed for the first time</string>\n\n  <!-- Include this only if you are planning to use the camera roll -->\n  <key>NSPhotoLibraryUsageDescription</key>\n  <string>Your message to user when the photo library is accessed for the first time</string>\n\n  <!-- Include this only if you are planning to use the microphone for video recording -->\n  <key>NSMicrophoneUsageDescription</key>\n  <string>Your message to user when the microsphone is accessed for the first time</string>\n```\n#### Android 7\nWith Android 7 and higher you need to add the \"Vibration\" permission to your AndroidManifest.xml of your project. This should be found in your `android/app/src/main/AndroidManifest.xml` Add the following:\n\n```\n<uses-permission android:name=\"android.permission.VIBRATE\"/>\n```\n\n#### react-native-camera\n[react-native-camera](https://github.com/lwansbrough/react-native-camera) is a dependency for this package that you'll need to add to your project. To install, run the following commands:\n  1. `npm install react-native-camera --save`\n  2. `react-native link react-native-camera`\n\n### To install and start using react-native-qrcode-scanner:\n```\nnpm install react-native-qrcode-scanner --save\n```\n```\nreact-native link react-native-qrcode-scanner\n```\n\n## Usage\nTo use react-native-qrcode-scanner, `import` the `react-native-qrcode-scanner` module and use the `<QRCodeScanner />` tag. More usage examples can be seen under the `examples/` folder.\n\nHere is an example of basic usage:\n```js\n'use strict';\n\nimport React, { Component } from 'react';\n\nimport {\n  AppRegistry,\n  StyleSheet,\n  Text,\n  NavigatorIOS,\n  TouchableOpacity,\n  Linking,\n} from 'react-native';\n\nimport QRCodeScanner from 'react-native-qrcode-scanner';\n\nclass ScanScreen extends Component {\n  onSuccess(e) {\n    Linking.openURL(e.data).catch(err => console.error('An error occured', err));\n  }\n\n  render() {\n    return (\n      <NavigatorIOS\n        initialRoute={{\n          component: QRCodeScanner,\n          title: 'Scan Code',\n          passProps: {\n            onRead: this.onSuccess.bind(this),\n            topContent: (\n              <Text style={styles.centerText}>\n                Go to <Text style={styles.textBold}>wikipedia.org/wiki/QR_code</Text> on your computer and scan the QR code.\n              </Text>\n            ),\n            bottomContent: (\n              <TouchableOpacity style={styles.buttonTouchable}>\n                <Text style={styles.buttonText}>OK. Got it!</Text>\n              </TouchableOpacity>\n            ),\n          },\n        }}\n        style={{ flex: 1 }}\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  centerText: {\n    flex: 1,\n    fontSize: 18,\n    padding: 32,\n    color: '#777',\n  },\n\n  textBold: {\n    fontWeight: '500',\n    color: '#000',\n  },\n\n  buttonText: {\n    fontSize: 21,\n    color: 'rgb(0,122,255)',\n  },\n\n  buttonTouchable: {\n    padding: 16,\n  },\n});\n\nAppRegistry.registerComponent('default', () => ScanScreen);\n```\n\nScreenshot of the above:  \n\n![screenshot 2017-05-02 15 06 33](https://cloud.githubusercontent.com/assets/5963656/25634528/fae4290a-2f48-11e7-899d-4c91ea079678.png)\n\n\nPlease open an issue if something doesn't work or is not clear enough.\n\n## Methods\n\n#### `reactivate()`\n\nCall this method to programmatically enabling scanning again. Use this by attaching a `ref` like so `<QRCodeScanner ref={(node) = { this.scanner = node }}>` and calling `this.scanner.reactivate()`\n\n## Props\n\n#### `onRead` (required)\npropType: `func.isRequired`\ndefault: `(e) => (console.log('QR code scanned!', e))`\n\nWill call this specified method when a QR code or a barcode is detected in the camera's view passing in the event emitted upon reading the code.\n\n#### `fadeIn`\npropType: `bool`\ndefault: `true`\n\nWhen set to `true` this ensures that the camera view fades in after the initial load up instead of being rendered immediately.\nSet this to false to prevent the animated fade in of the camera view.\n\n#### `reactivate`\npropType: `bool`\ndefault: `false`\n\nWhen set to `false`,  when a QR code is scanned, the `QRCodeScanner` will not scan another code until it is re-rendered.\nWhen set to `true` this will reactivate the scanning ability of the component.\n\n#### `reactivateTimeout`\npropType: `number`\ndefault: `0`\n\nUse this to configure how long it should take before the `QRCodeScanner` should reactivate.\n\n#### `topContent`\npropType: `oneOfType([\n  PropTypes.element,\n  PropTypes.string,\n])`\n\nUse this to render any additional content at the top of the camera view.\n\n#### `bottomContent`\npropType: `oneOfType([\n  PropTypes.element,\n  PropTypes.string,\n])`\n\nUse this to render any additional content at the bottom of the camera view.\n\n#### `containerStyle`\npropType: `any`\n\nUse this to pass styling for the outermost container. Useful for adding margin/padding to account for navigation bar. \n\n#### `cameraStyle`\npropType: `any`\n\nUse this to pass or overwrite styling for the camera window rendered.\n\n#### `topViewStyle`\npropType: `any`\n\nUse this to pass or overwrite styling for the `<View>` that contains the `topContent` prop.\n\n#### `bottomViewStyle`\npropType: `any`\n\nUse this to pass or overwrite styling for the `<View>` that contains the `bottomContent` prop.\n\n#### `showMarker` \npropType: `boolean`\ndefault: `false`\n\nUse this to show marker on the camera scanning window\n\n#### `customMarker`\npropType: `element`\n\nPass a RN element/component to use it as a custom marker.\n\n#### `notAuthorizedView`\npropType: `element`\n\nPass a RN element/component to use it when no permissions given to the camera (iOS only).\n\n#### `cameraType`\npropType: `oneOf(['front', 'back'])`\ndefault: `'back'`\n\nUse this to control which camera to use for scanning QR codes, defaults to rear camera. \n\n<!--## Contriubting-->\n<!--See [CONTRIBUTING.md](CONTRIBUTING.md)-->\n\n## Contributors\n- [Matthew Constantine](https://github.com/matthewconstantine)\n- [James Nolan](https://github.com/j-nolan)\n- [Sava Vidakovic](https://github.com/sava-vidakovic)\n- [Maximo Dominguez](https://github.com/mamodom)\n- [Michael J Gallagher](https://github.com/mjgallag)\n- [EzeRangel](https://github.com/EzeRangel)\n\n## License\nSee [LICENSE.md](LICENSE.md)\n\n## Thanks\nThanks to [Lochlan Wansbrough](https://github.com/lwansbrough) for the [react-native-camera module](https://github.com/lwansbrough/react-native-camera) which provided me with an awesome example of how to set up this module.\n\nThis QR code scanner was inspired by the QR code scanner within [Whatsapp](https://www.whatsapp.com/).\n\n\n## Other notes\n\n### To do\n- Document other complex examples\n- Add some tests\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/moaazsidat/react-native-qrcode-scanner.git"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "version": "0.0.23"
}
